<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classtf_1_1Pipeflow" kind="class" language="C++" prot="public">
    <compoundname>tf::Pipeflow</compoundname>
    <includes refid="pipeline_8hpp" local="no">pipeline.hpp</includes>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classtf_1_1Pipeflow_1af65467c6cb27f4ef42522207f03ab9cf" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Ps</declname>
            <defname>Ps</defname>
          </param>
        </templateparamlist>
        <type>friend class</type>
        <definition>friend class Pipeline</definition>
        <argsstring></argsstring>
        <name>Pipeline</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xiongzc/taskflow/taskflow/algorithm/pipeline.hpp" line="45" column="1" bodyfile="/home/xiongzc/taskflow/taskflow/algorithm/pipeline.hpp" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classtf_1_1Pipeflow_1af64ddb98831b893b2388af2a2302acea" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename P</type>
          </param>
        </templateparamlist>
        <type>friend class</type>
        <definition>friend class ScalablePipeline</definition>
        <argsstring></argsstring>
        <name>ScalablePipeline</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xiongzc/taskflow/taskflow/algorithm/pipeline.hpp" line="48" column="1" bodyfile="/home/xiongzc/taskflow/taskflow/algorithm/pipeline.hpp" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classtf_1_1Pipeflow_1a576c05629fadf8120eb4db27cf28e659" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Ps</declname>
            <defname>Ps</defname>
          </param>
        </templateparamlist>
        <type>friend class</type>
        <definition>friend class DataPipeline</definition>
        <argsstring></argsstring>
        <name>DataPipeline</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xiongzc/taskflow/taskflow/algorithm/data_pipeline.hpp" line="72" column="1" bodyfile="/home/xiongzc/taskflow/taskflow/algorithm/data_pipeline.hpp" bodystart="72" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classtf_1_1Pipeflow_1a082a1a549ab50360c7e6e55a0fd4477f" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t tf::Pipeflow::_line</definition>
        <argsstring></argsstring>
        <name>_line</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xiongzc/taskflow/taskflow/algorithm/pipeline.hpp" line="93" column="1" bodyfile="/home/xiongzc/taskflow/taskflow/algorithm/pipeline.hpp" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtf_1_1Pipeflow_1a597744cac4ef0dd9e31e1d694f71f7ec" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t tf::Pipeflow::_pipe</definition>
        <argsstring></argsstring>
        <name>_pipe</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xiongzc/taskflow/taskflow/algorithm/pipeline.hpp" line="94" column="1" bodyfile="/home/xiongzc/taskflow/taskflow/algorithm/pipeline.hpp" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtf_1_1Pipeflow_1a16275ecab224bf1ede060d9e24b4eb48" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t tf::Pipeflow::_token</definition>
        <argsstring></argsstring>
        <name>_token</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xiongzc/taskflow/taskflow/algorithm/pipeline.hpp" line="95" column="1" bodyfile="/home/xiongzc/taskflow/taskflow/algorithm/pipeline.hpp" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtf_1_1Pipeflow_1a7474a98aa648d96011df53b085d53965" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool tf::Pipeflow::_stop</definition>
        <argsstring></argsstring>
        <name>_stop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xiongzc/taskflow/taskflow/algorithm/pipeline.hpp" line="96" column="1" bodyfile="/home/xiongzc/taskflow/taskflow/algorithm/pipeline.hpp" bodystart="96" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtf_1_1Pipeflow_1a801877443f7046b9e450160c05c26d7d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tf::Pipeflow::Pipeflow</definition>
        <argsstring>()=default</argsstring>
        <name>Pipeflow</name>
        <briefdescription>
<para>default constructor </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xiongzc/taskflow/taskflow/algorithm/pipeline.hpp" line="55" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtf_1_1Pipeflow_1a579d15bb66fbcc2ab63d0570abe6c971" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t tf::Pipeflow::line</definition>
        <argsstring>() const </argsstring>
        <name>line</name>
        <briefdescription>
<para>queries the line identifier of the present token </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xiongzc/taskflow/taskflow/algorithm/pipeline.hpp" line="60" column="1" bodyfile="/home/xiongzc/taskflow/taskflow/algorithm/pipeline.hpp" bodystart="60" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="classtf_1_1Pipeflow_1ac31ced16a1d60a5b7c6007549b8d39a4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t tf::Pipeflow::pipe</definition>
        <argsstring>() const </argsstring>
        <name>pipe</name>
        <briefdescription>
<para>queries the pipe identifier of the present token </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xiongzc/taskflow/taskflow/algorithm/pipeline.hpp" line="67" column="1" bodyfile="/home/xiongzc/taskflow/taskflow/algorithm/pipeline.hpp" bodystart="67" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classtf_1_1Pipeflow_1a70d993ed5b211e6a151277e091afccf8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t tf::Pipeflow::token</definition>
        <argsstring>() const </argsstring>
        <name>token</name>
        <briefdescription>
<para>queries the token identifier </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xiongzc/taskflow/taskflow/algorithm/pipeline.hpp" line="74" column="1" bodyfile="/home/xiongzc/taskflow/taskflow/algorithm/pipeline.hpp" bodystart="74" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="classtf_1_1Pipeflow_1a830b7f204cb87fff17e8d424918d9453" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tf::Pipeflow::stop</definition>
        <argsstring>()</argsstring>
        <name>stop</name>
        <briefdescription>
<para>stops the pipeline scheduling </para>        </briefdescription>
        <detaileddescription>
<para>Only the first pipe can call this method to stop the pipeline. Others have no effect. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xiongzc/taskflow/taskflow/algorithm/pipeline.hpp" line="84" column="1" bodyfile="/home/xiongzc/taskflow/taskflow/algorithm/pipeline.hpp" bodystart="84" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="classtf_1_1Pipeflow_1a801877443f7046b9e450160c05c26d7d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tf::Pipeflow::Pipeflow</definition>
        <argsstring>()=default</argsstring>
        <name>Pipeflow</name>
        <briefdescription>
<para>default constructor </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xiongzc/taskflow/taskflow/algorithm/data_pipeline.hpp" line="79" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtf_1_1Pipeflow_1a579d15bb66fbcc2ab63d0570abe6c971" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t tf::Pipeflow::line</definition>
        <argsstring>() const </argsstring>
        <name>line</name>
        <briefdescription>
<para>queries the line identifier of the present token </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xiongzc/taskflow/taskflow/algorithm/data_pipeline.hpp" line="84" column="1" bodyfile="/home/xiongzc/taskflow/taskflow/algorithm/data_pipeline.hpp" bodystart="84" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="classtf_1_1Pipeflow_1ac31ced16a1d60a5b7c6007549b8d39a4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t tf::Pipeflow::pipe</definition>
        <argsstring>() const </argsstring>
        <name>pipe</name>
        <briefdescription>
<para>queries the pipe identifier of the present token </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xiongzc/taskflow/taskflow/algorithm/data_pipeline.hpp" line="91" column="1" bodyfile="/home/xiongzc/taskflow/taskflow/algorithm/data_pipeline.hpp" bodystart="91" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="classtf_1_1Pipeflow_1a70d993ed5b211e6a151277e091afccf8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t tf::Pipeflow::token</definition>
        <argsstring>() const </argsstring>
        <name>token</name>
        <briefdescription>
<para>queries the token identifier </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xiongzc/taskflow/taskflow/algorithm/data_pipeline.hpp" line="98" column="1" bodyfile="/home/xiongzc/taskflow/taskflow/algorithm/data_pipeline.hpp" bodystart="98" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="classtf_1_1Pipeflow_1a830b7f204cb87fff17e8d424918d9453" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tf::Pipeflow::stop</definition>
        <argsstring>()</argsstring>
        <name>stop</name>
        <briefdescription>
<para>stops the pipeline scheduling </para>        </briefdescription>
        <detaileddescription>
<para>Only the first pipe can call this method to stop the pipeline. Others have no effect. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xiongzc/taskflow/taskflow/algorithm/data_pipeline.hpp" line="108" column="1" bodyfile="/home/xiongzc/taskflow/taskflow/algorithm/data_pipeline.hpp" bodystart="108" bodyend="113"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>class to create a pipeflow object used by the pipe callable </para>    </briefdescription>
    <detaileddescription>
<para><ref refid="classtf_1_1Pipeflow" kindref="compound">Pipeflow</ref> represents a <emphasis>scheduling token</emphasis> in the pipeline scheduling framework. A pipeflow is created by the pipeline scheduler at runtime to pass to the pipe callable. Users can query the present statistics of that scheduling token, including the line identifier, pipe identifier, and token identifier, and build their application algorithms based on these statistics. At the first stage, users can explicitly call the stop method to stop the pipeline scheduler.</para><para><programlisting><codeline><highlight class="normal"><ref refid="classtf_1_1Pipe" kindref="compound">tf::Pipe</ref>{<ref refid="namespacetf_1abb7a11e41fd457f69e7ff45d4c769564a7b804a28d6154ab8007287532037f1d0" kindref="member">tf::PipeType::SERIAL</ref>,<sp/>[](<ref refid="classtf_1_1Pipeflow" kindref="compound">tf::Pipeflow</ref>&amp;<sp/>pf){</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><ref refid="cpp/io/basic_ostream" kindref="compound" external="/home/xiongzc/taskflow/doxygen/cppreference-doxygen-web.tag.xml">std::cout</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;token<sp/>id=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>pf.token()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>at<sp/>line=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>pf.line()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>at<sp/>pipe=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>pf.pipe()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal">}};</highlight></codeline>
</programlisting></para><para><ref refid="classtf_1_1Pipeflow" kindref="compound">Pipeflow</ref> can only be created privately by the <ref refid="classtf_1_1Pipeline" kindref="compound">tf::Pipeline</ref> and be used through the pipe callable. </para>    </detaileddescription>
    <location file="/home/xiongzc/taskflow/taskflow/algorithm/pipeline.hpp" line="42" column="1" bodyfile="/home/xiongzc/taskflow/taskflow/algorithm/pipeline.hpp" bodystart="42" bodyend="97"/>
    <listofallmembers>
      <member refid="classtf_1_1Pipeflow_1a082a1a549ab50360c7e6e55a0fd4477f" prot="private" virt="non-virtual"><scope>tf::Pipeflow</scope><name>_line</name></member>
      <member refid="classtf_1_1Pipeflow_1a597744cac4ef0dd9e31e1d694f71f7ec" prot="private" virt="non-virtual"><scope>tf::Pipeflow</scope><name>_pipe</name></member>
      <member refid="classtf_1_1Pipeflow_1a7474a98aa648d96011df53b085d53965" prot="private" virt="non-virtual"><scope>tf::Pipeflow</scope><name>_stop</name></member>
      <member refid="classtf_1_1Pipeflow_1a16275ecab224bf1ede060d9e24b4eb48" prot="private" virt="non-virtual"><scope>tf::Pipeflow</scope><name>_token</name></member>
      <member refid="classtf_1_1Pipeflow_1a576c05629fadf8120eb4db27cf28e659" prot="private" virt="non-virtual"><scope>tf::Pipeflow</scope><name>DataPipeline</name></member>
      <member refid="classtf_1_1Pipeflow_1a579d15bb66fbcc2ab63d0570abe6c971" prot="public" virt="non-virtual"><scope>tf::Pipeflow</scope><name>line</name></member>
      <member refid="classtf_1_1Pipeflow_1a579d15bb66fbcc2ab63d0570abe6c971" prot="public" virt="non-virtual"><scope>tf::Pipeflow</scope><name>line</name></member>
      <member refid="classtf_1_1Pipeflow_1ac31ced16a1d60a5b7c6007549b8d39a4" prot="public" virt="non-virtual"><scope>tf::Pipeflow</scope><name>pipe</name></member>
      <member refid="classtf_1_1Pipeflow_1ac31ced16a1d60a5b7c6007549b8d39a4" prot="public" virt="non-virtual"><scope>tf::Pipeflow</scope><name>pipe</name></member>
      <member refid="classtf_1_1Pipeflow_1a801877443f7046b9e450160c05c26d7d" prot="public" virt="non-virtual"><scope>tf::Pipeflow</scope><name>Pipeflow</name></member>
      <member refid="classtf_1_1Pipeflow_1a801877443f7046b9e450160c05c26d7d" prot="public" virt="non-virtual"><scope>tf::Pipeflow</scope><name>Pipeflow</name></member>
      <member refid="classtf_1_1Pipeflow_1af65467c6cb27f4ef42522207f03ab9cf" prot="private" virt="non-virtual"><scope>tf::Pipeflow</scope><name>Pipeline</name></member>
      <member refid="classtf_1_1Pipeflow_1af64ddb98831b893b2388af2a2302acea" prot="private" virt="non-virtual"><scope>tf::Pipeflow</scope><name>ScalablePipeline</name></member>
      <member refid="classtf_1_1Pipeflow_1a830b7f204cb87fff17e8d424918d9453" prot="public" virt="non-virtual"><scope>tf::Pipeflow</scope><name>stop</name></member>
      <member refid="classtf_1_1Pipeflow_1a830b7f204cb87fff17e8d424918d9453" prot="public" virt="non-virtual"><scope>tf::Pipeflow</scope><name>stop</name></member>
      <member refid="classtf_1_1Pipeflow_1a70d993ed5b211e6a151277e091afccf8" prot="public" virt="non-virtual"><scope>tf::Pipeflow</scope><name>token</name></member>
      <member refid="classtf_1_1Pipeflow_1a70d993ed5b211e6a151277e091afccf8" prot="public" virt="non-virtual"><scope>tf::Pipeflow</scope><name>token</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
