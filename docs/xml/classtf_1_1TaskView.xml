<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classtf_1_1TaskView" kind="class" language="C++" prot="public">
    <compoundname>tf::TaskView</compoundname>
    <includes refid="task_8hpp" local="no">task.hpp</includes>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classtf_1_1TaskView_1a763b2f90bc53f92d680a635fe28e858e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class Executor</definition>
        <argsstring></argsstring>
        <name>Executor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xiongzc/taskflow/taskflow/core/task.hpp" line="667" column="1" bodyfile="/home/xiongzc/taskflow/taskflow/core/task.hpp" bodystart="667" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classtf_1_1TaskView_1a05d718be8be0374448b570276709bedb" prot="private" static="no" mutable="no">
        <type>const Node &amp;</type>
        <definition>const Node&amp; tf::TaskView::_node</definition>
        <argsstring></argsstring>
        <name>_node</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xiongzc/taskflow/taskflow/core/task.hpp" line="723" column="1" bodyfile="/home/xiongzc/taskflow/taskflow/core/task.hpp" bodystart="723" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtf_1_1TaskView_1afc380436f6bee1fd17935fe3ca667d6b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="cpp/string/basic_string" kindref="compound" external="/home/xiongzc/taskflow/doxygen/cppreference-doxygen-web.tag.xml">std::string</ref> &amp;</type>
        <definition>const std::string &amp; tf::TaskView::name</definition>
        <argsstring>() const </argsstring>
        <name>name</name>
        <briefdescription>
<para>queries the name of the task </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xiongzc/taskflow/taskflow/core/task.hpp" line="674" column="1" bodyfile="/home/xiongzc/taskflow/taskflow/core/task.hpp" bodystart="731" bodyend="733"/>
      </memberdef>
      <memberdef kind="function" id="classtf_1_1TaskView_1a5595c5d064eb8883681476af0ce3caa8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t tf::TaskView::num_successors</definition>
        <argsstring>() const </argsstring>
        <name>num_successors</name>
        <briefdescription>
<para>queries the number of successors of the task </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xiongzc/taskflow/taskflow/core/task.hpp" line="679" column="1" bodyfile="/home/xiongzc/taskflow/taskflow/core/task.hpp" bodystart="751" bodyend="753"/>
      </memberdef>
      <memberdef kind="function" id="classtf_1_1TaskView_1a213cddc00016884c3a107e2002b3f9e2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t tf::TaskView::num_dependents</definition>
        <argsstring>() const </argsstring>
        <name>num_dependents</name>
        <briefdescription>
<para>queries the number of predecessors of the task </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xiongzc/taskflow/taskflow/core/task.hpp" line="684" column="1" bodyfile="/home/xiongzc/taskflow/taskflow/core/task.hpp" bodystart="736" bodyend="738"/>
      </memberdef>
      <memberdef kind="function" id="classtf_1_1TaskView_1ad1637fac13ca382b4e56a44cba41e905" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t tf::TaskView::num_strong_dependents</definition>
        <argsstring>() const </argsstring>
        <name>num_strong_dependents</name>
        <briefdescription>
<para>queries the number of strong dependents of the task </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xiongzc/taskflow/taskflow/core/task.hpp" line="689" column="1" bodyfile="/home/xiongzc/taskflow/taskflow/core/task.hpp" bodystart="741" bodyend="743"/>
      </memberdef>
      <memberdef kind="function" id="classtf_1_1TaskView_1a41bbcb456f37f7b3cb4f8dc0ba3bd395" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t tf::TaskView::num_weak_dependents</definition>
        <argsstring>() const </argsstring>
        <name>num_weak_dependents</name>
        <briefdescription>
<para>queries the number of weak dependents of the task </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xiongzc/taskflow/taskflow/core/task.hpp" line="694" column="1" bodyfile="/home/xiongzc/taskflow/taskflow/core/task.hpp" bodystart="746" bodyend="748"/>
      </memberdef>
      <memberdef kind="function" id="classtf_1_1TaskView_1a893201d9ddf1d731d9117facf88dc35a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename V</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void tf::TaskView::for_each_successor</definition>
        <argsstring>(V &amp;&amp;visitor) const </argsstring>
        <name>for_each_successor</name>
        <param>
          <type>V &amp;&amp;</type>
          <declname>visitor</declname>
        </param>
        <briefdescription>
<para>applies an visitor callable to each successor of the task </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xiongzc/taskflow/taskflow/core/task.hpp" line="700" column="1" bodyfile="/home/xiongzc/taskflow/taskflow/core/task.hpp" bodystart="780" bodyend="784"/>
      </memberdef>
      <memberdef kind="function" id="classtf_1_1TaskView_1ae2616595c4f7226a0368ae0a7cca5e59" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename V</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void tf::TaskView::for_each_dependent</definition>
        <argsstring>(V &amp;&amp;visitor) const </argsstring>
        <name>for_each_dependent</name>
        <param>
          <type>V &amp;&amp;</type>
          <declname>visitor</declname>
        </param>
        <briefdescription>
<para>applies an visitor callable to each dependents of the task </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xiongzc/taskflow/taskflow/core/task.hpp" line="706" column="1" bodyfile="/home/xiongzc/taskflow/taskflow/core/task.hpp" bodystart="788" bodyend="792"/>
      </memberdef>
      <memberdef kind="function" id="classtf_1_1TaskView_1adf52e2d874fa856e8a466bc3ee5afcc5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacetf_1a1355048578785a80414707ff308b395a" kindref="member">TaskType</ref></type>
        <definition>TaskType tf::TaskView::type</definition>
        <argsstring>() const </argsstring>
        <name>type</name>
        <briefdescription>
<para>queries the task type </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xiongzc/taskflow/taskflow/core/task.hpp" line="711" column="1" bodyfile="/home/xiongzc/taskflow/taskflow/core/task.hpp" bodystart="756" bodyend="771"/>
      </memberdef>
      <memberdef kind="function" id="classtf_1_1TaskView_1a358f9fb522c30a86e0c20bad41bcc6e7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t tf::TaskView::hash_value</definition>
        <argsstring>() const </argsstring>
        <name>hash_value</name>
        <briefdescription>
<para>obtains a hash value of the underlying node </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xiongzc/taskflow/taskflow/core/task.hpp" line="716" column="1" bodyfile="/home/xiongzc/taskflow/taskflow/core/task.hpp" bodystart="774" bodyend="776"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classtf_1_1TaskView_1ad19afa391850d49513c4280439fc50ee" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tf::TaskView::TaskView</definition>
        <argsstring>(const Node &amp;)</argsstring>
        <name>TaskView</name>
        <param>
          <type>const Node &amp;</type>
          <defname>node</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xiongzc/taskflow/taskflow/core/task.hpp" line="720" column="1" bodyfile="/home/xiongzc/taskflow/taskflow/core/task.hpp" bodystart="727" bodyend="728"/>
      </memberdef>
      <memberdef kind="function" id="classtf_1_1TaskView_1ae85861fa894c206e800a9e5d4ee45cbf" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tf::TaskView::TaskView</definition>
        <argsstring>(const TaskView &amp;)=default</argsstring>
        <name>TaskView</name>
        <param>
          <type>const <ref refid="classtf_1_1TaskView" kindref="compound">TaskView</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xiongzc/taskflow/taskflow/core/task.hpp" line="721" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>class to access task information from the observer interface </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/xiongzc/taskflow/taskflow/core/task.hpp" line="665" column="1" bodyfile="/home/xiongzc/taskflow/taskflow/core/task.hpp" bodystart="665" bodyend="724"/>
    <listofallmembers>
      <member refid="classtf_1_1TaskView_1a05d718be8be0374448b570276709bedb" prot="private" virt="non-virtual"><scope>tf::TaskView</scope><name>_node</name></member>
      <member refid="classtf_1_1TaskView_1a763b2f90bc53f92d680a635fe28e858e" prot="private" virt="non-virtual"><scope>tf::TaskView</scope><name>Executor</name></member>
      <member refid="classtf_1_1TaskView_1ae2616595c4f7226a0368ae0a7cca5e59" prot="public" virt="non-virtual"><scope>tf::TaskView</scope><name>for_each_dependent</name></member>
      <member refid="classtf_1_1TaskView_1a893201d9ddf1d731d9117facf88dc35a" prot="public" virt="non-virtual"><scope>tf::TaskView</scope><name>for_each_successor</name></member>
      <member refid="classtf_1_1TaskView_1a358f9fb522c30a86e0c20bad41bcc6e7" prot="public" virt="non-virtual"><scope>tf::TaskView</scope><name>hash_value</name></member>
      <member refid="classtf_1_1TaskView_1afc380436f6bee1fd17935fe3ca667d6b" prot="public" virt="non-virtual"><scope>tf::TaskView</scope><name>name</name></member>
      <member refid="classtf_1_1TaskView_1a213cddc00016884c3a107e2002b3f9e2" prot="public" virt="non-virtual"><scope>tf::TaskView</scope><name>num_dependents</name></member>
      <member refid="classtf_1_1TaskView_1ad1637fac13ca382b4e56a44cba41e905" prot="public" virt="non-virtual"><scope>tf::TaskView</scope><name>num_strong_dependents</name></member>
      <member refid="classtf_1_1TaskView_1a5595c5d064eb8883681476af0ce3caa8" prot="public" virt="non-virtual"><scope>tf::TaskView</scope><name>num_successors</name></member>
      <member refid="classtf_1_1TaskView_1a41bbcb456f37f7b3cb4f8dc0ba3bd395" prot="public" virt="non-virtual"><scope>tf::TaskView</scope><name>num_weak_dependents</name></member>
      <member refid="classtf_1_1TaskView_1ad19afa391850d49513c4280439fc50ee" prot="private" virt="non-virtual"><scope>tf::TaskView</scope><name>TaskView</name></member>
      <member refid="classtf_1_1TaskView_1ae85861fa894c206e800a9e5d4ee45cbf" prot="private" virt="non-virtual"><scope>tf::TaskView</scope><name>TaskView</name></member>
      <member refid="classtf_1_1TaskView_1adf52e2d874fa856e8a466bc3ee5afcc5" prot="public" virt="non-virtual"><scope>tf::TaskView</scope><name>type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
